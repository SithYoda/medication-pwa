// Configuration
let API_URL = 'https://darthyoda.pythonanywhere.com';
let currentUserId = null;
let currentUser = null;
let currentMedications = [];
let selectedMedication = null;

// Initialize app - skip login, go straight to main app
document.addEventListener('DOMContentLoaded', function() {
    setupEventListeners();
    showMainApp();
});

function setupEventListeners() {
    if (document.getElementById('loadUserBtn')) {
        document.getElementById('loadUserBtn').addEventListener('click', loadUserMedications);
    }
    if (document.getElementById('settingsBtn')) {
        document.getElementById('settingsBtn').addEventListener('click', () => {
            new bootstrap.Modal(document.getElementById('settingsModal')).show();
        });
    }
    if (document.getElementById('saveSettingsBtn')) {
        document.getElementById('saveSettingsBtn').addEventListener('click', saveSettings);
    }
}

// Show main app
function showMainApp() {
    document.getElementById('userSelection').style.display = 'block';
    if (document.getElementById('currentUserName')) {
        document.getElementById('currentUserName').style.display = 'inline-block';
        document.getElementById('currentUserName').textContent = 'User';
    }
    loadUsers();
}

// Load users
async function loadUsers() {
    try {
        const response = await fetch(`${API_URL}/users`);
        const users = await response.json();
        
        const userSelect = document.getElementById('userSelect');
        userSelect.innerHTML = '<option value="">Select a user...</option>';
        
        users.forEach(user => {
            const option = document.createElement('option');
            option.value = user.UsrID;
            option.textContent = user.Users;
            userSelect.appendChild(option);
        });
    } catch (error) {
        console.error('Error loading users:', error);
    }
}

// Load user medications
async function loadUserMedications() {
    const userSelect = document.getElementById('userSelect');
    const userId = userSelect.value;

    if (!userId) {
        alert('Please select a user');
        return;
    }

    currentUserId = userId;

    try {
        const response = await fetch(`${API_URL}/user-med-chart/user/${userId}/summary`);
        const data = await response.json();
        
        currentMedications = data.medications;
        displayMedications();
        
        document.getElementById('summarySection').style.display = 'flex';
        document.getElementById('mainTabs').style.display = 'block';
        document.querySelectorAll('.content-section').forEach(s => s.style.display = 'none');
        document.getElementById('medicationsSection').style.display = 'block';
        
        // Update summary
        document.getElementById('totalMeds').textContent = data.medications.length;
        document.getElementById('lowStockMeds').textContent = data.medications.filter(m => m.StockStatus === 'low').length;
        document.getElementById('criticalMeds').textContent = data.medications.filter(m => m.StockStatus === 'critical').length;
        
    } catch (error) {
        console.error('Error loading medications:', error);
        alert('Error loading medications');
    }
}

// Display medications
function displayMedications() {
    const tbody = document.getElementById('medicationsTable')?.getElementsByTagName('tbody')[0];
    if (!tbody) return;
    
    tbody.innerHTML = '';
    
    currentMedications.forEach(med => {
        const row = tbody.insertRow();
        row.innerHTML = `
            <td>${med.MedicationName}</td>
            <td>${med.CommonName}</td>
            <td>${med.MedicationStrength}</td>
            <td>${med.Stocktake}</td>
            <td>${med.DaysRemaining || 'N/A'}</td>
            <td><span class="badge bg-${med.StockStatus === 'critical' ? 'danger' : med.StockStatus === 'low' ? 'warning' : 'success'}">${med.StockStatus}</span></td>
        `;
    });
}

function saveSettings() {
    const apiUrl = document.getElementById('apiUrlInput')?.value;
    if (apiUrl) {
        API_URL = apiUrl;
        localStorage.setItem('apiUrl', apiUrl);
        alert('Settings saved');
    }
}
